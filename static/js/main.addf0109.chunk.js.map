{"version":3,"sources":["input.js","App.js","store.js","index.js"],"names":["inputSlice","createSlice","name","initialState","classInput","invalidDateInput","startDate","reducers","setClassInput","state","action","payload","setInvalidInput","setStartDate","actions","mergePDF","pdfs","a","PDFDocument","create","doc","index","length","load","element","copyPages","getPageIndices","forEach","page","addPage","DownloadPDF","margin","months","document","getElementsByClassName","docs","jsPDF","clientWidth","clientHeight","html","x","y","push","output","mergedPDF","save","Blob","type","documentMode","window","navigator","msSaveBlob","url","URL","webkitURL","link","createObjectURL","createElement","download","href","body","appendChild","click","removeChild","Input","props","dispatch","useDispatch","cInput","useSelector","input","iInput","sInput","className","style","gridRowStart","gridColumnStart","id","cols","rows","onChange","event","target","value","display","onClick","update","sameDay","d1","d2","getFullYear","getMonth","getDate","Calendar","monthNames","start","class","coursedays","classinput","invalidDatesInput","STARTDATE","Date","getTime","getTimezoneOffset","content","split","invalidDays","invDay","date","Number","cont","days","Object","line","daynum","isNaN","keys","linecont","slice","indexOf","lastday","setDate","getDay","next","day","returnDays","invalid","monthCount","monthDiff","monthNum","currentday","beginningMonth","allWeeks","week","border","daycont","shift","err","month","textAlign","colSpan","setMonth","App","this","setState","updateState","bind","React","Component","configureStore","reducer","ReactDOM","render","store","getElementById"],"mappings":"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","file":"static/js/main.addf0109.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const inputSlice = createSlice({\r\n  name: \"input\",\r\n  initialState: {\r\n    classInput: \"\",\r\n    invalidDateInput: \"\",\r\n    startDate: \"\",\r\n  },\r\n  reducers: {\r\n    setClassInput: (state, action) => {\r\n      state.classInput = action.payload;\r\n    },\r\n    setInvalidInput: (state, action) => {\r\n      state.invalidDateInput = action.payload;\r\n    },\r\n    setStartDate: (state, action) => {\r\n      state.startDate = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setClassInput, setInvalidInput, setStartDate } =\r\n  inputSlice.actions;\r\n\r\nexport default inputSlice.reducer;\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setClassInput, setInvalidInput, setStartDate } from \"./input\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport { PDFDocument } from \"pdf-lib\";\r\n\r\nasync function mergePDF(pdfs) {\r\n  var doc = await PDFDocument.create();\r\n\r\n  for (let index = 0; index < pdfs.length; index++) {\r\n    // var pdf = await PDFDocument.load(pdfs[index]);\r\n    // for (let pageIndex = 0; pageIndex < pdf.getPageCount(); pageIndex++) {\r\n    // const element = pdf.copyPages(pdf, [pageIndex]);\r\n    // doc.addPage(element)\r\n    // }\r\n    const element = await PDFDocument.load(pdfs[index]);\r\n    const copiedPagesA = await doc.copyPages(element, element.getPageIndices());\r\n    copiedPagesA.forEach((page) => doc.addPage(page));\r\n  }\r\n  return doc;\r\n}\r\n\r\nasync function DownloadPDF() {\r\n  var margin = 10;\r\n  var months = document.getElementsByClassName(\"month\");\r\n  var docs = [];\r\n  for (let index = 0; index < months.length; index++) {\r\n    var doc = new jsPDF(\"l\", \"px\", [months[index].clientWidth + margin * 2, months[index].clientHeight + margin * 2.3]);\r\n    await doc.html(months[index], { x: 0, y: 0, margin: margin });\r\n    //doc.save(\"month.pdf\")\r\n    docs.push(doc.output(\"arraybuffer\"));\r\n  }\r\n  var mergedPDF = await mergePDF(docs);\r\n  //var mergedPDF = await PDFDocument.create();\r\n\r\n  mergedPDF = await mergedPDF.save();\r\n  //mergedPDF = mergedPDF.blob();\r\n  mergedPDF = new Blob([mergedPDF], { type: \"octet-stream\" });\r\n\r\n  var isIE = false || !!document.documentMode;\r\n  if (isIE) {\r\n    window.navigator.msSaveBlob(mergedPDF, \"month.pdf\");\r\n  } else {\r\n    var url = window.URL || window.webkitURL;\r\n    var link = url.createObjectURL(mergedPDF);\r\n    var a = document.createElement(\"a\");\r\n    a.download = \"month.pdf\";\r\n    a.href = link;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  }\r\n  //window.open(mergedPDF)\r\n  //mergedPDF = await mergedPDF.saveAsBase64({ dataUri: true });\r\n  //window.open(mergedPDF);\r\n  //mergedPDF.save();\r\n  // //var doc = new jsPDF(\"l\", \"px\", [months[0].clientWidth + margin * 2, months[0].clientHeight + margin * 2.3]);\r\n  // // add all pages for\r\n  // for (let index = 1; index < months.length; index++) {\r\n  //   console.log(index);\r\n  //   doc = doc.addPage([months[index].clientWidth + margin * 2, months[index].clientHeight + margin * 2.3], \"l\");\r\n  // }\r\n  // // await doc.html(months[1], { x: 0, y: 830, margin: 10 });\r\n  // // await doc.html(months[0], { x: 0, y: 0, margin: 10 });\r\n  // var height = 0;\r\n  // for (let index = 0; index < months.length; index++) {\r\n  //   await doc.html(months[index], { x: 0, y: height, margin: margin });\r\n  //   height += months[index].clientHeight + margin * 2.3;\r\n  // }\r\n  // doc.output(\"dataurlnewwindow\");\r\n}\r\n\r\nfunction Input(props) {\r\n  const dispatch = useDispatch();\r\n  let cInput = useSelector((state) => state.input.classInput);\r\n  let iInput = useSelector((state) => state.input.invalidDateInput);\r\n  let sInput = useSelector((state) => state.input.startDate);\r\n  return (\r\n    <div className=\"input\">\r\n      <p style={{ gridRowStart: 1, gridColumnStart: 1 }}>Enter the list of events.</p>\r\n      <textarea name=\"\" id=\"classInput\" cols=\"30\" rows=\"10\" onChange={(event) => dispatch(setClassInput(event.target.value))}></textarea>\r\n      <div id=\"middle\">\r\n        <p style={{ display: \"block\" }}>Enter the start date</p>\r\n        <input type=\"date\" name=\"\" id=\"startDate\" onChange={(event) => dispatch(setStartDate(event.target.value))}></input>\r\n        <br />\r\n        <button id=\"createCalendar\" onClick={() => props.update(cInput, iInput, sInput)}>\r\n          Create\r\n        </button>\r\n      </div>\r\n      <p style={{ gridRowStart: 1, gridColumnStart: 3 }}>Enter the list of holidays.</p>\r\n      <textarea name=\"\" id=\"invalidDatesInput\" cols=\"30\" rows=\"10\" onChange={(event) => dispatch(setInvalidInput(event.target.value))}></textarea>\r\n    </div>\r\n  );\r\n}\r\nfunction sameDay(d1, d2) {\r\n  return d1.getFullYear() === d2.getFullYear() && d1.getMonth() === d2.getMonth() && d1.getDate() === d2.getDate();\r\n}\r\n\r\nfunction monthDiff(d1, d2) {\r\n  var months;\r\n  months = (d2.getFullYear() - d1.getFullYear()) * 12;\r\n  months -= d1.getMonth();\r\n  months += d2.getMonth();\r\n  return months <= 0 ? 0 : months;\r\n}\r\n\r\nfunction returnDays(classinput, invalidDatesInput, start) {\r\n  //let begin = useSelector((state) => state.input.startDate).split(\"-\");\r\n  // get starting date\r\n  var STARTDATE = new Date(start);\r\n  STARTDATE = new Date(STARTDATE.getTime() + STARTDATE.getTimezoneOffset() * 60000);\r\n  // get holidays\r\n  //var content = useSelector((state) => state.input.invalidDateInput);\r\n  var content = invalidDatesInput.split(\"\\n\");\r\n  var invalidDays = [];\r\n\r\n  for (let x = 0; x < content.length; x++) {\r\n    let invDay = content[x];\r\n    invDay = invDay.split(\",\");\r\n    let date = new Date(Number(invDay[0]), Number(invDay[1]) - 1, Number(invDay[2]));\r\n    invalidDays.push(date);\r\n  }\r\n\r\n  //let cont = useSelector((state) => state.input.classInput);\r\n  // get days\r\n  let cont = classinput.split(\"\\n\");\r\n  var days = Object();\r\n  // read days\r\n  for (let x = 0; x < cont.length; x++) {\r\n    let line = cont[x];\r\n    let daynum = Number(line.split(\",\", 1)[0]);\r\n    if (isNaN(daynum)) {\r\n      daynum = Number(Object.keys(days)[Object.keys(days).length - 1]) + 1;\r\n      if (isNaN(daynum)) {\r\n        daynum = 1;\r\n      }\r\n    }\r\n    let linecont = line.slice(line.indexOf(\",\") + 1);\r\n    days[daynum] = linecont;\r\n  }\r\n\r\n  // previous day's number\r\n  var lastday = 0;\r\n  // Final list of valid days\r\n  var coursedays = [];\r\n  // place days ignoring sunday, saturday and holidays\r\n  for (var daynum in days) {\r\n    if (lastday === 0) {\r\n      coursedays.push({\r\n        date: new Date(STARTDATE.getTime()),\r\n        cont: days[daynum],\r\n      });\r\n      lastday = daynum;\r\n      continue;\r\n    }\r\n    while (true) {\r\n      STARTDATE.setDate(STARTDATE.getDate() + (daynum - lastday));\r\n      if (STARTDATE.getDay() === 0 || STARTDATE.getDay() === 6) {\r\n        continue;\r\n      }\r\n      let next = false;\r\n      for (let day = 0; day < invalidDays.length; day++) {\r\n        if (sameDay(STARTDATE, invalidDays[day])) {\r\n          next = true;\r\n        }\r\n      }\r\n      if (!next) {\r\n        break;\r\n      }\r\n    }\r\n    coursedays.push({\r\n      date: new Date(STARTDATE.getTime()),\r\n      cont: days[daynum],\r\n    });\r\n    lastday = daynum;\r\n  }\r\n  return coursedays;\r\n}\r\n\r\nfunction Calendar(props) {\r\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n  // Don't render anything if the input is empty\r\n  if (props.start === \"\" || props.class === \"\") {\r\n    return <div></div>;\r\n  }\r\n  try {\r\n    var coursedays = returnDays(props.class, props.invalid, props.start);\r\n    // Generate Calendars for months\r\n    var months = [];\r\n    var STARTDATE = new Date(props.start);\r\n    // ignore timezones\r\n    STARTDATE = new Date(STARTDATE.getTime() + STARTDATE.getTimezoneOffset() * 60000);\r\n    var monthCount = monthDiff(coursedays[0].date, coursedays[coursedays.length - 1].date) + 1;\r\n    for (var monthNum = 0; monthNum < monthCount; monthNum++) {\r\n      var currentday = new Date(STARTDATE.getFullYear(), STARTDATE.getMonth(), 1);\r\n      var beginningMonth = currentday.getMonth();\r\n      // require unique keys for each week\r\n      var index = 0;\r\n      var allWeeks = [];\r\n      while (true) {\r\n        var week = [];\r\n        // build one week\r\n        for (var daynum = 0; daynum < 7; daynum++) {\r\n          // Append blank days at currentday of month\r\n          if (currentday.getDate() === 1) {\r\n            for (var x = 0; x < currentday.getDay(); x++) {\r\n              week.push(<td className=\"dayCell\" style={{ border: \"0px solid black\" }} key={x}></td>);\r\n            }\r\n            daynum = currentday.getDay();\r\n          }\r\n          // If we are on a day with content, append content to calendar\r\n          var daycont = \"\";\r\n          try {\r\n            if (sameDay(coursedays[0].date, currentday)) {\r\n              daycont = coursedays.shift();\r\n              daycont = daycont.cont;\r\n            }\r\n          } catch (err) {\r\n            // if error, no more days exist in course days\r\n          }\r\n          // Build day\r\n          var day = (\r\n            <td className=\"dayCell\" key={daynum}>\r\n              <div className=\"day\">\r\n                <p className=\"daynum\">{currentday.getDate()}</p>\r\n                <div className=\"daycont\">{daycont}</div>\r\n              </div>\r\n            </td>\r\n          );\r\n          currentday.setDate(currentday.getDate() + 1);\r\n          week.push(day);\r\n          if (currentday.getMonth() !== beginningMonth) {\r\n            break;\r\n          }\r\n        }\r\n        allWeeks.push(<tr key={index}>{week}</tr>);\r\n        index++;\r\n        // Stop making calendar if next week is in next month\r\n        if (currentday.getMonth() !== beginningMonth) {\r\n          break;\r\n        }\r\n      }\r\n      var month = (\r\n        <table className=\"month\" key={monthNum}>\r\n          <tbody>\r\n            <tr className=\"title\">\r\n              <th style={{ textAlign: \"center\" }} colSpan=\"7\">\r\n                {monthNames[STARTDATE.getMonth()]} {STARTDATE.getFullYear()}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th className=\"dayWeek\">Sunday</th>\r\n              <th className=\"dayWeek\">Monday</th>\r\n              <th className=\"dayWeek\">Tuesday</th>\r\n              <th className=\"dayWeek\">Wednesday</th>\r\n              <th className=\"dayWeek\">Thursday</th>\r\n              <th className=\"dayWeek\">Friday</th>\r\n              <th className=\"dayWeek\">Saturday</th>\r\n            </tr>\r\n            {allWeeks}\r\n          </tbody>\r\n        </table>\r\n      );\r\n      STARTDATE.setMonth(STARTDATE.getMonth() + 1);\r\n      months.push(month);\r\n    }\r\n    if (months === []) {\r\n      return <div></div>;\r\n    }\r\n    // add button to download all calendars as pdf\r\n    return (\r\n      <div className=\"allMonths\">\r\n        <button id=\"downloadPDF\" onClick={DownloadPDF}>\r\n          Download All as PDF\r\n        </button>\r\n        {months}\r\n      </div>\r\n    );\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { class: \"\", invalid: \"\", start: \"\" };\r\n  }\r\n  updateState(classInput, invalid, start) {\r\n    this.setState((state) => {\r\n      return { class: classInput };\r\n    });\r\n    this.setState((state) => {\r\n      return { invalid: invalid };\r\n    });\r\n    this.setState((state) => {\r\n      return { start: start };\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Input update={this.updateState.bind(this)} />\r\n        <br />\r\n        <Calendar class={this.state.class} invalid={this.state.invalid} start={this.state.start} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport input from \"./input\";\r\n\r\nexport default configureStore({\r\n  reducer: { input: input },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}